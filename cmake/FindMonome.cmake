# If MONOME_ROOT_DIR was defined in the environment, use it.
IF(NOT MONOME_ROOT_DIR AND NOT $ENV{MONOME_ROOT_DIR} STREQUAL "")
  SET(MONOME_ROOT_DIR $ENV{MONOME_ROOT_DIR})
ENDIF()

SET(_MONOME_SEARCH_DIRS
  ${MONOME_ROOT_DIR}
  /usr/local
  /sw # Fink
  /opt/local # DarwinPorts
  /opt/csw # Blastwave
)

FIND_PATH(MONOME_INCLUDE_DIR MONOME.h
  HINTS
    ${_MONOME_SEARCH_DIRS}
  PATH_SUFFIXES
    include
)


FIND_LIBRARY(MONOME_LIBRARY
  NAMES "libmonome.dylib" "libmonome.a"
  HINTS ${_MONOME_SEARCH_DIRS}
  PATH_SUFFIXES lib64 lib
  )

# handle the QUIETLY and REQUIRED arguments and set MONOME_FOUND to TRUE if
# all listed variables are TRUE
INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(MONOME DEFAULT_MSG
    MONOME_LIBRARY MONOME_INCLUDE_DIR)

IF(MONOME_FOUND)
  SET(MONOME_LIBRARIES ${MONOME_LIBRARY})
  SET(MONOME_INCLUDE_DIRS ${MONOME_INCLUDE_DIR})
ENDIF(MONOME_FOUND)

MARK_AS_ADVANCED(
  MONOME_INCLUDE_DIR
  MONOME_LIBRARY
)